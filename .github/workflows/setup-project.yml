name: üèóÔ∏è Setup zen-info.pl Project Structure

on:
  workflow_dispatch:
    inputs:
      setup_type:
        description: 'Co chcesz zrobiƒá?'
        required: true
        default: 'full_setup'
        type: choice
        options:
        - full_setup
        - structure_only
        - files_only
        - update_data

jobs:
  setup-project:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: üèóÔ∏è Create folder structure
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'structure_only' }}
      run: |
        echo "üèóÔ∏è Creating folder structure..."
        
        # Main folders
        mkdir -p .github/workflows
        mkdir -p src/components
        mkdir -p src/data  
        mkdir -p src/utils
        mkdir -p src/styles
        mkdir -p public/images/daily-art
        
        echo "‚úÖ Folder structure created!"
        echo "üìÅ Created: public/images/daily-art/ (for JPG images)"
        tree -a || find . -type d | sort
    
    - name: üìÑ Create essential files
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'files_only' }}
      run: |
        echo "üìÑ Creating essential files..."
        
        # CNAME for GitHub Pages
        echo "zen-info.pl" > CNAME
        
        # package.json
        cat > package.json << 'EOF'
        {
          "name": "zen-info-portal",
          "version": "1.0.0",
          "description": "Minimalistyczny portal informacyjny - zen-info.pl",
          "main": "src/main.jsx",
          "type": "module",
          "scripts": {
            "dev": "vite",
            "build": "vite build",
            "preview": "vite preview",
            "collect-news": "node src/utils/newsCollector.js"
          },
          "dependencies": {
            "react": "^18.2.0",
            "react-dom": "^18.2.0",
            "lucide-react": "^0.263.1"
          },
          "devDependencies": {
            "@vitejs/plugin-react": "^4.0.3",
            "vite": "^4.4.5",
            "feedparser": "^2.2.10",
            "node-fetch": "^3.3.1"
          }
        }
        EOF
        
        # vite.config.js
        cat > vite.config.js << 'EOF'
        import { defineConfig } from 'vite'
        import react from '@vitejs/plugin-react'

        export default defineConfig({
          plugins: [react()],
          base: '/',
          build: {
            outDir: 'dist',
            assetsDir: 'assets'
          }
        })
        EOF
        
        # .gitignore
        cat > .gitignore << 'EOF'
        node_modules/
        dist/
        .env
        .env.local
        *.log
        .DS_Store
        .vscode/
        .cache/
        EOF
        
        echo "‚úÖ Essential files created!"
    
    - name: üåê Create HTML template
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'files_only' }}
      run: |
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="pl">
          <head>
            <meta charset="UTF-8" />
            <link rel="icon" type="image/x-icon" href="/favicon.ico" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>zen-info.pl - Minimalistyczny Portal Informacyjny</title>
            <meta name="description" content="Najwa≈ºniejsze wiadomo≈õci w minimalistycznej formie" />
            <style>
              body { margin: 0; font-family: system-ui; }
              #loading { 
                position: fixed; top: 0; left: 0; width: 100%; height: 100%; 
                display: flex; align-items: center; justify-content: center;
                background: white; font-family: monospace; font-size: 24px;
              }
            </style>
          </head>
          <body>
            <div id="loading">zen-info.pl</div>
            <div id="root"></div>
            <script type="module" src="/src/main.jsx"></script>
          </body>
        </html>
        EOF
        
        echo "‚úÖ HTML template created!"
    
    - name: ‚öõÔ∏è Create React components
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'files_only' }}
      run: |
        # Main React entry point
        cat > src/main.jsx << 'EOF'
        import React from 'react'
        import ReactDOM from 'react-dom/client'
        import ZenInfoPortal from './components/ZenPortal.jsx'
        import './styles/globals.css'

        ReactDOM.createRoot(document.getElementById('root')).render(
          <React.StrictMode>
            <ZenInfoPortal />
          </React.StrictMode>,
        )
        EOF
        
        # Basic Portal component (simplified version)
        cat > src/components/ZenPortal.jsx << 'EOF'
        import React, { useState, useEffect } from 'react';
        import { Moon, Sun, ExternalLink } from 'lucide-react';

        const ZenInfoPortal = () => {
          const [darkMode, setDarkMode] = useState(false);
          const [articles, setArticles] = useState([]);
          const [loading, setLoading] = useState(true);

          useEffect(() => {
            // Load articles from JSON
            fetch('/src/data/articles.json')
              .then(res => res.json())
              .then(data => {
                setArticles(data);
                setLoading(false);
              })
              .catch(err => {
                console.error('Error loading articles:', err);
                setLoading(false);
              });
          }, []);

          if (loading) {
            return (
              <div className="min-h-screen flex items-center justify-center">
                <div className="text-2xl font-mono">≈Åadowanie...</div>
              </div>
            );
          }

          return (
            <div className={`min-h-screen ${darkMode ? 'bg-black text-white' : 'bg-white text-black'}`}>
              <header className="border-b p-6">
                <div className="max-w-4xl mx-auto flex justify-between items-center">
                  <h1 className="text-4xl font-semibold">zen-info.pl</h1>
                  <button onClick={() => setDarkMode(!darkMode)} className="p-2">
                    {darkMode ? <Sun size={20} /> : <Moon size={20} />}
                  </button>
                </div>
              </header>
              
              <main className="max-w-4xl mx-auto p-6">
                {articles.length === 0 ? (
                  <div className="text-center py-12">
                    <p className="text-xl font-mono">Portal jest gotowy!</p>
                    <p className="mt-4 text-sm opacity-60">Uruchom news collector aby za≈Çadowaƒá artyku≈Çy</p>
                  </div>
                ) : (
                  <div className="space-y-8">
                    {articles.map(article => (
                      <article key={article.id} className="border-b pb-8">
                        <h2 className="text-xl font-semibold mb-2">{article.title}</h2>
                        <p className="mb-4 opacity-80">{article.summary}</p>
                        <div className="flex justify-between text-sm opacity-60">
                          <span>{article.source}</span>
                          <span>{article.date}</span>
                        </div>
                      </article>
                    ))}
                  </div>
                )}
              </main>
            </div>
          );
        };

        export default ZenInfoPortal;
        EOF
        
        echo "‚úÖ React components created!"
    
    - name: üé® Create styles
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'files_only' }}
      run: |
        cat > src/styles/globals.css << 'EOF'
        @tailwind base;
        @tailwind components;
        @tailwind utilities;

        * {
          box-sizing: border-box;
        }

        body {
          margin: 0;
          font-family: system-ui, -apple-system, sans-serif;
          line-height: 1.6;
        }
        EOF
        
        echo "‚úÖ Styles created!"
    
    - name: üìä Create sample data
      if: ${{ github.event.inputs.setup_type == 'full_setup' || github.event.inputs.setup_type == 'update_data' }}
      run: |
        # Sample articles
        cat > src/data/articles.json << 'EOF'
        [
          {
            "id": 1,
            "title": "Portal zen-info.pl jest gotowy!",
            "category": "Technologia",
            "summary": "Minimalistyczny portal informacyjny zosta≈Ç pomy≈õlnie skonfigurowany i jest gotowy do u≈ºycia.",
            "content": "Portal zen-info.pl zosta≈Ç automatycznie skonfigurowany przez GitHub Actions. Wszystkie pliki sƒÖ na swoim miejscu i system jest gotowy do pobierania najnowszych wiadomo≈õci.",
            "source": "System",
            "date": "2025-08-05",
            "priority": "wysoki",
            "originalLink": "#",
            "collectedAt": "2025-08-05T16:30:00Z"
          },
          {
            "id": 2,
            "title": "Jak dzia≈Ça automatyczne pobieranie news√≥w",
            "category": "Edukacja", 
            "summary": "System bƒôdzie automatycznie pobiera≈Ç najnowsze wiadomo≈õci z RSS feeds g≈Ç√≥wnych portali informacyjnych.",
            "content": "News collector bƒôdzie uruchamiany co 2 godziny przez GitHub Actions, pobierajƒÖc artyku≈Çy z Interia, TVN24, Gazeta.pl i innych ≈∫r√≥de≈Ç. Artyku≈Çy sƒÖ automatycznie kategoryzowane i priorytetyzowane.",
            "source": "Dokumentacja",
            "date": "2025-08-05",
            "priority": "≈õredni",
            "originalLink": "#",
            "collectedAt": "2025-08-05T16:30:00Z"
          }
        ]
        EOF
        
        # Sample daily art (with JPG references)
        cat > src/data/daily-art.json << 'EOF'
        {
          "current": {
            "id": "art-001",
            "title": "Minimalistyczny krajobraz g√≥rski",
            "artist": "Anna Nowak",
            "description": "Spokojny widok na pasmo g√≥rskie o ≈õwicie, uchwycony w minimalistycznym stylu z naciskiem na proste linie i naturalne kolory.",
            "imageUrl": "/images/daily-art/art-001.jpg",
            "date": "2025-08-05",
            "medium": "Fotografia cyfrowa",
            "location": "Tatry, Polska", 
            "tags": ["natura", "g√≥ry", "minimalizm", "≈õwit"],
            "updatedAt": "2025-08-05T16:30:00Z"
          },
          "totalArtworks": 7,
          "lastRotation": "2025-08-05T16:30:00Z",
          "schedule": [
            {
              "date": "2025-08-05",
              "artId": "art-001", 
              "title": "Minimalistyczny krajobraz g√≥rski",
              "imageUrl": "/images/daily-art/art-001.jpg"
            },
            {
              "date": "2025-08-06",
              "artId": "art-002",
              "title": "Architektura wsp√≥≈Çczesnej Warszawy", 
              "imageUrl": "/images/daily-art/art-002.jpg"
            },
            {
              "date": "2025-08-07",
              "artId": "art-003",
              "title": "Jesienne refleksje",
              "imageUrl": "/images/daily-art/art-003.jpg"
            }
          ]
        }
        EOF
        
        echo "‚úÖ Sample data created!"
    
    - name: ü§ñ Create news collector
      if: ${{ github.event.inputs.setup_type == 'full_setup' }}
      run: |
        cat > src/utils/newsCollector.js << 'EOF'
        // News Collector for zen-info.pl
        console.log('üì∞ News Collector - coming soon!');
        console.log('This will fetch RSS feeds and update articles.json');
        
        // Basic structure for future implementation
        class ZenNewsCollector {
          constructor() {
            this.sources = {
              "Interia": "https://fakty.interia.pl/feed",
              "TVN24": "https://tvn24.pl/najwazniejsze.xml"
            };
          }
          
          async run() {
            console.log('üöÄ News collector would run here...');
            console.log('Next step: implement RSS parsing');
          }
        }

        if (require.main === module) {
          const collector = new ZenNewsCollector();
          collector.run();
        }

        module.exports = ZenNewsCollector;
        EOF
        
        echo "‚úÖ News collector placeholder created!"
    
    - name: üìã Create project summary
      run: |
        echo "## üåü zen-info.pl Project Setup Complete!" >> setup-summary.md
        echo "" >> setup-summary.md
        echo "**Setup completed at:** $(date)" >> setup-summary.md
        echo "**Setup type:** ${{ github.event.inputs.setup_type }}" >> setup-summary.md
        echo "" >> setup-summary.md
        echo "### üìÅ Structure created:" >> setup-summary.md
        find . -type f -name "*.json" -o -name "*.jsx" -o -name "*.js" -o -name "*.html" -o -name "*.css" -o -name "*.yml" | head -20 >> setup-summary.md
        echo "" >> setup-summary.md
        echo "### üìä File count:" >> setup-summary.md
        echo "- JSON files: $(find . -name "*.json" | wc -l)" >> setup-summary.md  
        echo "- React files: $(find . -name "*.jsx" | wc -l)" >> setup-summary.md
        echo "- JavaScript files: $(find . -name "*.js" | wc -l)" >> setup-summary.md
        echo "" >> setup-summary.md
        echo "### üöÄ Next steps:" >> setup-summary.md
        echo "1. Enable GitHub Pages in repo settings" >> setup-summary.md
        echo "2. Run the update-news workflow" >> setup-summary.md
        echo "3. Visit your portal at zen-info.pl" >> setup-summary.md
        
        cat setup-summary.md
    
    - name: üñºÔ∏è Create placeholder images info
      if: ${{ github.event.inputs.setup_type == 'full_setup' }}
      run: |
        # Create README for images folder
        cat > public/images/daily-art/README.md << 'EOF'
        # üé® Daily Art Images

        Tutaj umieszczaj pliki JPG z dzie≈Çami artystycznymi na ka≈ºdy dzie≈Ñ.

        ## üìù Naming convention:
        - art-001.jpg, art-002.jpg, art-003.jpg...
        - Maksymalnie 2MB na plik
        - Rozdzielczo≈õƒá: 800x600px lub podobna (4:3)
        - Format: JPG, PNG

        ## üîÑ Jak dodaƒá nowe dzie≈Ço:
        1. Dodaj plik obrazu (np. art-008.jpg)
        2. Zaktualizuj src/data/daily-art.json z metadanymi
        3. System automatycznie rotuje obrazy codziennie

        ## üìä Status:
        - Aktualnie: 0 obraz√≥w (dodaj art-001.jpg, art-002.jpg...)
        - Potrzebne: minimum 7 obraz√≥w na tydzie≈Ñ
        - Zalecane: 30+ obraz√≥w na pe≈Çny miesiƒÖc rotacji

        ## üéØ Przyk≈Çadowe nazwy:
        - art-001.jpg - "Krajobraz g√≥rski"
        - art-002.jpg - "Architektura miasta" 
        - art-003.jpg - "Natura abstrakcyjna"
        - art-004.jpg - "Portret uliczny"
        - art-005.jpg - "Minimalizm"
        EOF
        
        # Create sample placeholder (1x1 pixel PNG as base64)
        echo "Creating image placeholder..."
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > public/images/daily-art/.placeholder.png
        
        echo "‚úÖ Image structure created!"
        echo "üìÅ Add your JPG files to public/images/daily-art/"
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add .
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üèóÔ∏è Setup zen-info.pl project structure

          ‚úÖ Created folder structure
          ‚úÖ Added essential configuration files  
          ‚úÖ Created React components
          ‚úÖ Added sample data
          ‚úÖ Portal ready for deployment
          
          Setup type: ${{ github.event.inputs.setup_type }}
          Generated by GitHub Actions"
          
          git push
          echo "‚úÖ All changes committed and pushed!"
        fi
    
    - name: üéâ Setup complete notification
      run: |
        echo "üéâ zen-info.pl project setup complete!"
        echo ""
        echo "üìÅ Structure created with ${{ github.event.inputs.setup_type }} mode"
        echo "üìä Files: $(find . -type f | grep -E '\.(js|jsx|json|html|css)$' | wc -l) created"
        echo "üöÄ Ready for deployment!"
        echo ""
        echo "Next steps:"
        echo "1. Go to repo Settings ‚Üí Pages"  
        echo "2. Enable GitHub Pages"
        echo "3. Set custom domain: zen-info.pl"
        echo "4. Your portal will be live! üåü"
